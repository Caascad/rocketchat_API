name: Test and publish

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  schedule:
    - cron: '0 20 * * 5'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Start rocket.chat server
        uses: isbang/compose-action@v0.1.1
        with:
          compose-file: docker-compose.yml
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install pytest-cov black requests
      - name: Lint with black
        run: black --check .
      - name: Wait for rocket.chat server to be online
        run: until curl --silent http://localhost:3000/api/info/; do sleep 15; echo "waiting for Rocket.Chat server to start"; done;
      - name: Run tests
        run: pytest tests rocketchat_API -x --cov-report xml --cov=./
      - name: Upload code coverage  
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} 
          verbose: true
          files: coverage.xml
          fail_ci_if_error: true

  publish:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload --skip-existing dist/*
